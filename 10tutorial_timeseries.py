# -*- coding: utf-8 -*-
"""10tutorial_timeseries.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TBlQdXUW0vWWIc5-utJz5Iy5OdF9Y6zQ
"""

import pandas as pd
import matplotlib.pyplot as plt

df=pd.read_csv("AirPassengers.csv")
df

df.plot()
plt.show()

df2 = pd.read_csv("AirPassengers.csv", parse_dates = ['Month'], index_col=['Month'])
df2

def plot_df(df,x,y,title="",xlabel='Date',ylabel="Number of Passengers",dpi=100):
  plt.figure(figsize=(15,4),dpi=dpi)
  plt.plot(x,y,color='tab:red')
  plt.gca().set(title=title,xlabel=xlabel,ylabel=ylabel)
  plt.show()
plot_df(df,x=df['Month'],y=df['#Passengers'][::-1],title='Number of US airline passengers from 1949 to 1960')
  #negative plot of graph

plot_df(df,x=df['Month'],y=df['#Passengers'],title='Number of US airline passengers from 1949 to 1960')
#positive plot of graph

df

from abc import ABC, abstractmethod


class polygon(ABC):

    @abstractmethod
    def sides(self):
        pass


class triangle(polygon):

    def sides(self):
        print("i have 3 sides")

t = triangle()
t.sides()

t=polygon()
t.sides()

#exception handling...if we create object of abstractmethod....it should give error exception